import{_ as s,c as a,ae as i,o as t}from"./chunks/framework.xloa616Z.js";const m=JSON.parse('{"title":"Framework CSS & SASS","description":"","frontmatter":{},"headers":[],"relativePath":"features/css-framework.md","filePath":"features/css-framework.md"}'),r={name:"features/css-framework.md"};function o(n,e,l,c,p,u){return t(),a("div",null,e[0]||(e[0]=[i('<h1 id="framework-css-sass" tabindex="-1">Framework CSS &amp; SASS <a class="header-anchor" href="#framework-css-sass" aria-label="Permalink to &quot;Framework CSS &amp; SASS&quot;">​</a></h1><p>Cette application utilise un framework CSS/JS personnalisé reposant sur une bibliothèque de composants.</p><h2 id="caracteristiques-principales" tabindex="-1">Caractéristiques principales <a class="header-anchor" href="#caracteristiques-principales" aria-label="Permalink to &quot;Caractéristiques principales&quot;">​</a></h2><ul><li><strong>Composants réutilisables :</strong> Les classes telles que <code>.button</code>, <code>.modal</code>, <code>.card</code>, etc., sont prévues pour l’affichage sur le front-end et le back-office.</li><li><strong>Méthodologie BEM :</strong> La structure des classes respecte la convention BEM pour une meilleure maintenabilité.</li><li><strong>Mobile First et Dark Mode :</strong> Les composants sont conçus pour être responsives et supportent un mode sombre activable via la classe <code>.dark</code> ou des media queries.</li><li><strong>Personnalisation :</strong> L&#39;administrateur peut choisir parmi plusieurs thèmes graphiques pour l&#39;affichage.</li></ul><h2 id="bonnes-pratiques" tabindex="-1">Bonnes pratiques <a class="header-anchor" href="#bonnes-pratiques" aria-label="Permalink to &quot;Bonnes pratiques&quot;">​</a></h2><ul><li><strong>Unités relatives et variables CSS :</strong> Pour assurer une mise en page flexible et un thème cohérent.</li><li><strong>Organisation en layers :</strong> Séparation des styles de base, des modules et des composants spécifiques.</li></ul><p>Pour appliquer vos modifications au CSS, utilisez SASS. Une fois vos modifications effectuées, compilez le CSS avec :</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div>',8)]))}const h=s(r,[["render",o]]);export{m as __pageData,h as default};
